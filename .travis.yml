---
jobs:
  include:
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=0http
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=act
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=actix-web
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=agoo
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=agoo-c
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=aiohttp
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=air
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=akkahttp
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=amber
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=asgineer
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=aspnetcore
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=athena
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=atreugo
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=basicphp
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=beego
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=blacksheep
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=bocadillo
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=bottle
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=chi
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=coast
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=cuba
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=dancer2
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=django
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=drogon
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=echo
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=evhtp
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=express
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=falcon
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=fastapi
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=fasthttprouter
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=fastify
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=flame
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=flask
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=foxify
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=gf
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=gin
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=gorilla-mux
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=goroute
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=gorouter
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=gorouter-fasthttp
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=gotham
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=gramework
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=hanami
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=hapi
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=http4s
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=httpbeast
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=hug
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=hyperf
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=imi
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=iotjs-express
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=iron
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=japronto
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=javalin
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=jester
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=kami
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=kemal
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=kitura
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=kitura-nio
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=koa
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=kore
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=ktor
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=laravel
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=lucky
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=lumen
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=masonite
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=moleculer
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=molten
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=muneem
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=nickel
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=onyx
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=orion
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=perfect
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=polka
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=polkadot
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=quart
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=rack-routing
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=rails
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=rapidoid
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=rayo
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=raze
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=responder
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=restana
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=restify
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=roda
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=router.cr
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=rte
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=sanic
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=sifrr
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=sinatra
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=slim
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=spider-gazelle
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=spiral
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=spring-boot
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=starlette
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=suave
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=swifter
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=swoft
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=symfony
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=syro
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=tornado
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=toro
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=turbo_polka
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=vapor
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=violetear
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=zend-expressive
    services: docker
  - stage: test
    script: bash .ci/test.sh
    language: crystal
    env: FRAMEWORK=zend-framework
    services: docker
notifications:
  email: false
before_install: bash .ci/has_to_run.sh || travis_terminate 0
dist: bionic
